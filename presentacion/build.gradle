plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'jacoco'
    id 'kotlin-kapt'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.androidbase"
        minSdk 26
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    viewBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.activity:activity-ktx:1.4.0"
    kapt 'androidx.room:room-compiler:2.4.2'

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.20"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1"

    // Dependencias de modulos
    implementation project(path: ':dominio')
    implementation project(path: ':infraestructura')

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"

    // lifecycleScope:
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    kapt "androidx.lifecycle:lifecycle-common-java8:2.4.1"

    //Inyeccion dependencias
    api "com.google.dagger:hilt-android:2.41"
    kapt "com.google.dagger:hilt-android-compiler:2.41"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.20"

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.9.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.2'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

    //test
    implementation 'androidx.test:core-ktx:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'

}

// tarea para los reportes de analisis de codigo
task jacocoTestReport(type: JacocoReport, dependsOn: [':dominio:testDebugUnitTest',
                                                      ':infraestructura:connectedAndroidTest']) {

    def moduloDominio = project(':dominio')
    def moduloInfraestructura = project(':infraestructura')

    def directoriosArchivosClasses = layout.files(
            "$moduloDominio.buildDir/tmp/kotlin-classes/debug/com/dominio",
            "$moduloInfraestructura.buildDir/tmp/kotlin-classes/debug/com/infraestructura",
            "$buildDir/tmp/kotlin-classes/debug/com/androidbase"
    )

    def archivosPropios = layout.files(
            "$moduloDominio.projectDir/src/main/java/com/dominio",
            "$moduloInfraestructura.projectDir/src/main/java/com/infraestructura",
            "$projectDir/src/main/java/com/androidbase"
    )

    def archivosPruebasIntegracion = fileTree(
            dir: "$buildDir", includes:
            ["outputs/code_coverage/debugAndroidTest/connected/**/coverage.ec"]
    )

    def archivosPruebasUnitarias =
            "$moduloDominio.buildDir/outputs/Unit_Test_code_coverage/debugUnitTest/testDebugUnitTest.exec"

    def archivosPruebasIntegracionOtrosModulos =
            "$moduloInfraestructura.buildDir/outputs/code_coverage/debugAndroidTest/connected/**/coverage.ec"

    def archivosPruebas = layout.files(
            archivosPruebasIntegracion,
            archivosPruebasIntegracionOtrosModulos,
            archivosPruebasUnitarias
    )

    sourceDirectories.setFrom(files([archivosPropios]))
    classDirectories.setFrom(files([directoriosArchivosClasses.asFileTree]))
    executionData.setFrom(archivosPruebas.asFileTree)

    reports {
        xml.enabled true
        html.enabled true
    }

}